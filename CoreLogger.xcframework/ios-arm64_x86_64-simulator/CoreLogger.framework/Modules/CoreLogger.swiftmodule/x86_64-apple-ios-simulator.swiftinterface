// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target x86_64-apple-ios15.6-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name CoreLogger
// swift-module-flags-ignorable: -enable-bare-slash-regex
import DeveloperToolsSupport
import Foundation
import OSLog
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers public class Bugs {
  public static let shared: CoreLogger.Bugs
  public func start()
  public func setUser(_ userId: Swift.String, withEmail: Swift.String, andName: Swift.String)
  @objc deinit
}
public struct NomoLogger {
  public init(category: Swift.String)
  public init(subsystem: Swift.String, category: Swift.String)
  public func log(type: CoreLogger.LoggerLevel, withStructure log: CoreLogger.StructuredLog)
}
public enum LoggerLevel {
  case trace
  case debug
  case info
  case notice
  case warning
  case error
  case critical
  public static func == (a: CoreLogger.LoggerLevel, b: CoreLogger.LoggerLevel) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public struct StructuredLog {
  public init(title: Swift.String, method: Swift.String, message: Swift.String, networkStatus: Swift.String, error: (any Swift.Error)? = nil, metadata: [Swift.String : Any]? = nil)
}
extension CoreLogger.LoggerLevel : Swift.Equatable {}
extension CoreLogger.LoggerLevel : Swift.Hashable {}
